[{"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\index.js":"1","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\reportWebVitals.js":"2","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\App.js":"3","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\Opener.js":"4","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Contender.js":"5","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\TournamentTree.js":"6","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Tree.js":"7","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Match.js":"8","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\MatchComponent.js":"9","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\MatchSiteComponent.js":"10","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Player.js":"11","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\SummaryWinnerComponent.js":"12","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\GeneralSummaryComponent.js":"13"},{"size":207,"mtime":1608143675363,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":4268,"mtime":1608579951777,"results":"17","hashOfConfig":"15"},{"size":2381,"mtime":1608571267104,"results":"18","hashOfConfig":"15"},{"size":578,"mtime":1608491664025,"results":"19","hashOfConfig":"15"},{"size":1945,"mtime":1608576126332,"results":"20","hashOfConfig":"15"},{"size":896,"mtime":1608490581119,"results":"21","hashOfConfig":"15"},{"size":530,"mtime":1608588062576,"results":"22","hashOfConfig":"15"},{"size":1632,"mtime":1608577797749,"results":"23","hashOfConfig":"15"},{"size":13575,"mtime":1608599261454,"results":"24","hashOfConfig":"15"},{"size":174,"mtime":1608335392251,"results":"25","hashOfConfig":"15"},{"size":2047,"mtime":1608493676511,"results":"26","hashOfConfig":"15"},{"size":1708,"mtime":1608504796105,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"gvisqz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\index.js",[],["60","61"],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\reportWebVitals.js",[],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\App.js",[],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\Opener.js",["62","63"],"import React from \"react\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../styles/main.css\";\r\nimport OpenerStyle from \"../styles/opener-style.module.css\";\r\n\r\nexport const Opener = (props) => {\r\n    const history = useHistory();\r\n\r\n    const startTournament = () => {\r\n        history.push(\"/tournament\");\r\n    };\r\n\r\n    const alertMissingFiles = () => {\r\n        if (props.n1 === \"\") {\r\n            alert('Please enter tournament CSV')\r\n        } else if (props.n2 === \"\") {\r\n            alert('Please enter players CSV')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={OpenerStyle.container}>\r\n            <div className={OpenerStyle.openingTitle}>\r\n                <p>Let The Tournament Begin!</p>\r\n            </div>\r\n\r\n            <div className={OpenerStyle.leftCSV}>\r\n                <div className={`rounded-md ${OpenerStyle.x}`}>\r\n                    <CSVReader inputStyle={{height: '100%', width: '100%', opacity: '0'}} onFileLoaded={props.getCSV} />\r\n                    <div className={OpenerStyle.y}>\r\n                        <a>Select Tournament CSV </a>\r\n                    </div>\r\n                </div>\r\n                {props.n1 !== \"\" ? (<div>\r\n                    <p>{props.n1}</p>\r\n                    </div>) : null}\r\n            </div>\r\n            <div className={OpenerStyle.rightCSV}>\r\n                <div className={`rounded-md ${OpenerStyle.x}`}>\r\n                    <CSVReader inputStyle={{height: '100%', width: '100%', opacity: '0'}} onFileLoaded={props.getPlayersCSV} />\r\n                    <div className={OpenerStyle.y}>\r\n                        <a>Select Players CSV</a>\r\n                    </div>\r\n                </div>\r\n                {props.n2 !== \"\" ? (<div>\r\n                    <p>{props.n2}</p>\r\n                    </div>) : null}\r\n            </div>\r\n            <div className={OpenerStyle.openingButton}>\r\n                {props.n1 !== \"\" && props.n2 !== \"\" ? (<div>\r\n                    <p><button className={`rounded-md animate-bounce ${OpenerStyle.startTournamentButton}`} onClick={startTournament}>Start Tournament</button></p>\r\n                    </div>) : <button className={`rounded-md ${OpenerStyle.startTournamentButton}`} onClick={alertMissingFiles}>Start Tournament</button>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Opener;\r\n","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Contender.js",[],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\TournamentTree.js",["64"],"import React from \"react\";\r\nimport MatchComponent from \"./MatchComponent\";\r\nimport \"../styles/main.css\";\r\nimport TournamentTreeStyle from \"../styles/tournament-tree-style.module.css\";\r\n\r\nexport const TournamentTree = (props) => {\r\n    if (props.listOfContenders.length) {\r\n        console.log(props.players);\r\n\r\n        const tournamentTree = props.tournamentTree;\r\n        let threshold = props.listOfContenders.length / 2;\r\n        let current_match = -1;\r\n        let columnNumber = 1;\r\n        return (\r\n            tournamentTree.tree.map((match, index) => {\r\n            current_match++;\r\n\r\n            let stylingItem = {\r\n                gridColumnStart: columnNumber.toString(),\r\n                gridColumnEnd: (columnNumber + 1).toString(),\r\n                gridRowStart: (\r\n                    current_match * Math.pow(2, columnNumber - 1) +\r\n                    1\r\n                ).toString(),\r\n                gridRowEnd: (\r\n                    current_match * Math.pow(2, columnNumber - 1) +\r\n                    1 +\r\n                    Math.pow(2, columnNumber - 1)\r\n                ).toString(),\r\n                justifySelf: \"center\",\r\n                alignSelf: \"center\",\r\n                border: \"3px solid #e6b31e\",\r\n                width: \"10rem\",\r\n                height: \"4rem\",\r\n                paddingLeft: \"5px\",\r\n                margin: \"5px\",\r\n            };\r\n\r\n            if (current_match === threshold - 1) {\r\n                threshold /= 2;\r\n                current_match = -1;\r\n                columnNumber++;\r\n            }\r\n\r\n            return (\r\n                <MatchComponent\r\n                    key={match.id}\r\n                    stylingItem={stylingItem}\r\n                    match={match}\r\n                />\r\n            );\r\n        }));\r\n    } else {\r\n        return (\r\n            <div>\r\n                <p>empty</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TournamentTree;\r\n","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Tree.js",[],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Match.js",[],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\MatchComponent.js",["65","66","67","68"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../styles/main.css\";\r\nimport MatchComponentStyle from \"../styles/match-component-style.module.css\";\r\n\r\nexport const MatchComponent = (props) => {\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        history.push(\"/match/\" + props.match.id);\r\n    };\r\n\r\n    const match = props.match;\r\n\r\n    return (\r\n        <div style={props.stylingItem} onClick={handleClick}>\r\n            <p className={MatchComponentStyle.matchId}> {match.id} </p>\r\n            <div className={MatchComponentStyle.matchContainer}>\r\n            {match.contender1 !== null ? (\r\n                \r\n                    <div className={MatchComponentStyle.matchContender}>\r\n                        <a className={match.contender1 === match.winner ? MatchComponentStyle.b : \"\"}>{match.contender1.name}</a>\r\n                        <a className={match.contender1 === match.winner ? MatchComponentStyle.b : \"\"}>{match.contender1score}</a>\r\n                    \r\n                </div>\r\n            ) : null}\r\n            {match.contender2 !== null ? (\r\n                \r\n                    <div className={MatchComponentStyle.matchContender}>\r\n                        <a className={match.contender2 === match.winner ? MatchComponentStyle.b : \"\"}>{match.contender2.name}</a>\r\n                        <a className={match.contender2 === match.winner ? MatchComponentStyle.b : \"\"}>{match.contender2score}</a>\r\n                    </div>\r\n                \r\n            ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default MatchComponent;\r\n","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\MatchSiteComponent.js",["69","70","71","72"],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\classes\\Player.js",[],"C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\SummaryWinnerComponent.js",["73","74"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const SummaryWinnerComponent = (props) => {\r\n    const history = useHistory();\r\n    const winner =\r\n        props.tournamentTree.tree[props.tournamentTree.tree.length - 1].winner;\r\n\r\n    const proceed = () => {\r\n        history.push(\"/general-summary\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"winner-left\">\r\n                <p>WINNER!!!</p>\r\n                <p>{winner.name}</p>\r\n\r\n                {winner.isImg() ? (\r\n                    <p>\r\n                        <img src={winner.url}></img>\r\n                    </p>\r\n                ) : (\r\n                    <p>\r\n                        <iframe src={winner.url} allowFullScreen></iframe>\r\n                    </p>\r\n                )}\r\n            </div>\r\n            <div className=\"winner-right\">\r\n                {props.tournamentTree.tree.map((match, index) =>\r\n                    match.contender1 === winner ? (\r\n                        <div>\r\n                            <p>\r\n                                {\" \"}\r\n                                {match.contender1score} :{\" \"}\r\n                                {match.contender2score}{\" \"}\r\n                            </p>\r\n                            <p> Against </p>\r\n                            <p> {match.contender2.name} </p>\r\n                        </div>\r\n                    ) : match.contender2 === winner ? (\r\n                        <div>\r\n                            <p>\r\n                                {\" \"}\r\n                                {match.contender1score} :{\" \"}\r\n                                {match.contender2score}{\" \"}\r\n                            </p>\r\n                            <p> Against </p>\r\n                            <p> {match.contender1.name} </p>\r\n                        </div>\r\n                    ) : null\r\n                )}\r\n            </div>\r\n            <button onClick={proceed}>Next</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SummaryWinnerComponent;\r\n","C:\\Users\\Jan\\Documents\\tornament_web_application\\src\\components\\GeneralSummaryComponent.js",["75","76"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const GeneralSummaryComponent = (props) => {\r\n    const history = useHistory();\r\n\r\n    const clickHandle = () => {\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Name</th>\r\n                    <th>numberOfMatches</th>\r\n                    <th>Average Score</th>\r\n                    <th>Rafaels Variable</th>\r\n                    <th>Damage</th>\r\n                </tr>\r\n            </table>\r\n\r\n            {props.tournamentTree.contenders.map((contender) => (\r\n                <tr>\r\n                    <td width=\"10\" height=\"25\">\r\n                        {contender.isImg() ? (\r\n                            <p>\r\n                                <img src={contender.url}></img>\r\n                            </p>\r\n                        ) : (\r\n                            <p>\r\n                                <iframe\r\n                                    src={contender.url}\r\n                                    allowFullScreen\r\n                                ></iframe>\r\n                            </p>\r\n                        )}\r\n                    </td>\r\n                    <td>{contender.name}</td>\r\n                    <td>{contender.numberOfMatches}</td>\r\n                    <td>{contender.avgScore()}</td>\r\n                    <td>{contender.rafaelsVariable}</td>\r\n                    <td>{contender.dmg}</td>\r\n                </tr>\r\n            ))}\r\n\r\n            <button onClick={clickHandle}> END TOURNAMENT </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeneralSummaryComponent;\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":32,"column":25,"nodeType":"83","endLine":32,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":43,"column":25,"nodeType":"83","endLine":43,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":22,"column":25,"nodeType":"83","endLine":22,"endColumn":103},{"ruleId":"81","severity":1,"message":"82","line":23,"column":25,"nodeType":"83","endLine":23,"endColumn":103},{"ruleId":"81","severity":1,"message":"82","line":30,"column":25,"nodeType":"83","endLine":30,"endColumn":103},{"ruleId":"81","severity":1,"message":"82","line":31,"column":25,"nodeType":"83","endLine":31,"endColumn":103},{"ruleId":"88","severity":1,"message":"89","line":303,"column":29,"nodeType":"83","endLine":306,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":310,"column":29,"nodeType":"83","endLine":314,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":376,"column":29,"nodeType":"83","endLine":379,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":383,"column":29,"nodeType":"83","endLine":387,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":21,"column":25,"nodeType":"83","endLine":21,"endColumn":47},{"ruleId":"90","severity":1,"message":"91","line":25,"column":25,"nodeType":"83","endLine":25,"endColumn":66},{"ruleId":"88","severity":1,"message":"89","line":29,"column":33,"nodeType":"83","endLine":29,"endColumn":58},{"ruleId":"90","severity":1,"message":"91","line":33,"column":33,"nodeType":"83","endLine":36,"endColumn":34},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'TournamentTreeStyle' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]